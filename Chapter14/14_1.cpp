#重载运算与类型转换
#######概念总结#######
#1当运算符被用于类类型的对象时，c++语言允许我们为其指定新的含义
#同时，可以自定义类类型之间的转换规则（隐式地将一种类型的对象转换为另一种类型的对象）
#14.1基本概念
#	1.重载运算符函数的参数数量与该运算符作用的运算对象数量一致。 
#	2.除了重载的函数调用运算符operator()之外，其他重载运算符不能含有默认实参。 
#	3.若运算符函数时成员函数，则第一个（左侧）运算对象绑定到隐式的this指针上。因此，成员运算符函数的参数数量比运算符的运算对象少一个。
#	4.对于运算符函数来说，它或者时类的成员，或者至少含一个类类型的参数。因此，我们不能对内置类型的运算对象改变运算符号的含义。譬如 int operator+(int,int)，试图定义int类型的加法，这是被禁止的。
#	5.可以重载大部分运算符，仅能对已有的运算符进行重载，不能自己造符号。
#	6.（+，-，*，&）既是一元运算符，又是二元运算符，根据参数数量来推断重载的是哪一种。
#	7.重载运算符的优先级与运算符本来的优先级一致。
#	8.两种调用方式是等价的
#		@1：data1 + data2 与 operator+(data1,data2) 是等价的 
#		@2：data1+=data2 与 data1.operator+=(data2) 是等价的
#	9.通常，我们不为逻辑与，逻辑或，逗号，取地址重载运算符，一个是重载并不保证执行顺序与之前一致（例如与），另一个是尽量符合使用习惯（不为&重载）
#	10.选择作为成员或者非成员
#		@1：赋值，下标，调用，成员访问运算符必须是成员
#		@2：复合赋值运（+=）算符一般来说是成员
#		@3：改变对象状态的运算符或者与给定类型密切相关的运算符，如递增，递减，解引用，一般是成员
#		@4：具有对称性的运算符，如算术，相等性，关系，位运算，一般是非成员函数
#		@6：希望在混合类型的运算中使用运算符，一般定义为非成员函数，例如类似double + int
#		@7：运算符定义为成员函数时，左侧运算对象必须是运算符所属类
######################
 
#######习题讲解#######
#练习14.1：重载操作至少一个类或枚举，不保证求值顺序；优先级，操作数目，一致 
#练习14.2：■■■
#练习14.3：	（a）string
#			（b）string
#			（c）vector
#			（d）string
#练习14.4：%非；%=是，会改变对象状态；++是，会改变对象状态；->是，否则编译报错；<<非；&&非；==非；()是，否则编译报错 
#练习14.5：■■■
######################
